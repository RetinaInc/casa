<?php

/**
 * @file
 * Hooks and API functions for casa_booking_manager module.
 */

/**
 * Implements hook_menu_alter().
 */
function casa_booking_manager_menu_alter(&$items) {
  // Change with a custom callback function.
  $items['booking/%start_date/%end_date']['page callback'] = 'casa_booking_manager_results_page';
}

/**
 * Implements hook_theme().
 */
function casa_booking_manager_theme() {
  return array(
    'casa_booking_results' => array(
      'template' => 'casa_booking_results',
    ),
  );
}
// Custom page callback for Casa availability results page.
function casa_booking_manager_results_page(DateTime $start_date, DateTime $end_date, $booking_units = 1) {
  // Validate the dates.
  $errors = rooms_check_dates_validity($start_date, $end_date, TRUE);

  // Check validity of the rest of the booking parameters that are stored in
  // $_GET. Again this is to ensure that any direct links were structured
  // appropriately.
  $booking_parameters = rooms_booking_manager_retrieve_booking_parameters($booking_units, $_GET);
  // The array of content to render.
  $content = array();
  // The only one type in Casa is casa_type
  $unit_types = array('casa_type');
  if (empty($errors) && is_array($booking_parameters)) {
    $content['booking_results'] = 1;

    // Get the unit Casa of casa_tye type.
    $agent = new AvailabilityAgent($start_date, $end_date, $booking_parameters, $booking_units, array_keys(array_filter(variable_get('rooms_valid_availability_states', drupal_map_assoc(array(ROOMS_AVAILABLE, ROOMS_ON_REQUEST))))), $unit_types);

    $unit = $agent->checkAvailability();

    // If we don't have any useful result to show just display a failure message
    // and the search form.
    if (($unit == ROOMS_NO_ROOMS) || ($unit == ROOMS_SIZE_FAILURE)) {
      $content['booking_results'] = 0;

      // Add the search availability form.
      module_load_include('inc', 'rooms_booking_manager', 'rooms_booking_manager.availability_search');
      $booking_search_form = drupal_get_form('rooms_booking_availability_search_form_page');

      // Alter the page title.
      drupal_set_title(variable_get_value('rooms_booking_manager_create_your_booking'));

      // Store and clean old messages.
      $old_messages = drupal_get_messages();

      // Create a warning message.
      drupal_set_message(variable_get_value('rooms_booking_manager_warning_no_units_available'), 'warning');

      // Show the themed warning message inside our form.
      $content['no_results'] = array(
        '#prefix' => '<div class="no-booking-data">',
        '#markup' => theme('status_messages'),
        '#suffix' => '</div>',
      );

      // Restore old messages.
      $_SESSION['messages'] = $old_messages;

      $content['booking_search_form'] = $booking_search_form;
    }
    else {
      // Alter the page title.
      drupal_set_title(variable_get_value('rooms_booking_manager_select_your_stay'));

      $content = rooms_booking_manager_present_individual_rooms($unit, $content, $start_date, $end_date, $booking_parameters);
    }
  }
  else {
    drupal_set_message(t('Perform a search to get availability information'));
    drupal_goto('booking');
    exit;
  }
  if ($content['booking_results']) {
    $content['change_search'] = drupal_get_form('casa_booking_manager_change_search_form', $start_date, $end_date, $booking_parameters);
  }

  return theme('casa_booking_results', $content);
}
// Casa change search form.
function casa_booking_manager_change_search_form($form, &$form_state, $start_date, $end_date, $booking_parameters) {
  // Ensure stylesheets are added to the page.
  $form['#attached']['css'] = array(drupal_get_path('module', 'casa_booking_manager') . '/css/casa_booking_manager.css');
  $date_format = variable_get('rooms_date_format', 'd-m-Y');

  // Add js to page.
  $form['#attached']['js'][] = drupal_get_path('module', 'casa_booking_manager') . '/js/casa_booking_manager.js';

  if (!isset($form['info'])) {
    $form['info'] = array(
      '#type' => 'fieldset',
      '#title' => variable_get_value('rooms_booking_manager_your_current_search'),
      '#tree' => FALSE,
      '#attributes' => array('class' => array('rooms-current-search__info', 'form-item')),
    );
  }
  if (!isset($form['info']['params'])) {
    $form['info']['params'] = array(
      '#type' => 'container',
      '#tree' => FALSE,
      '#attributes' => array('class' => array('rooms-current-search__params', 'form-item')),
      '#weight' => 10,
    );
  }

  $form['info']['arrival_date'] = array(
    '#theme' => 'container',
    '#markup' => '<label>' . variable_get_value('rooms_booking_manager_arrival_date') . ':' . '</label> <span class="info">' . check_plain($start_date->format($date_format)) . '</span>',
    '#attributes' => array('class' => array('rooms-current-search__arrival', 'form-item')),
  );
  $form['info']['params']['start_date'] = array(
    '#type' => 'hidden',
    '#value' => $start_date->format('Y-m-d'),
  );

  $form['info']['departure_date'] = array(
    '#theme' => 'container',
    '#markup' => '<label>' . variable_get_value('rooms_booking_manager_departure_date') . ':' . '</label> <span class="info">' . check_plain($end_date->format($date_format)) . '</span>',
    '#attributes' => array('class' => array('rooms-current-search__departure', 'form-item')),
  );
  $form['info']['params']['end_date'] = array(
    '#type' => 'hidden',
    '#value' => $end_date->format('Y-m-d'),
  );

  $form['info']['nights'] = array(
    '#theme' => 'container',
    '#markup' => '<label>' . variable_get_value('rooms_booking_manager_nights') . ':' . '</label> <span class="info">' . $end_date->diff($start_date)->days . '</span>',
    '#attributes' => array('class' => array('rooms-current-search__nights', 'form-item')),
  );

  if (!empty($booking_parameters)) {
    $form['info']['params']['booking_parameters'] = array(
      '#type' => 'hidden',
      '#value' => serialize($booking_parameters),
    );
  }

  if (isset($_GET['rooms_id'])) {
    $form['rooms_id'] = array(
      '#type' => 'hidden',
      '#value' => $_GET['rooms_id'],
    );
  }
  // Send value of change_search text to change opening and closing calendars.
  drupal_add_js(array('casaBookingManager' => array('changeSearchText' => variable_get_value('rooms_booking_manager_button_change_search'))), 'setting');

  // Change search link, used to to open hidden calendars on the page.
  $form['info']['change_search'] = array(
    '#markup' => '<div class="casa_change_search_availability_button"><a href="#" onclick="return false;" class="jquery-once-1-processed">' . variable_get_value('rooms_booking_manager_button_change_search') . '</a></div>',
  );

  return $form;
}
